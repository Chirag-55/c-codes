/*

Given an integer array, in-place move all zeros present in it to the end. The solution should maintain the relative order of items in the array and should not use constant space.

Input : [6, 0, 8, 2, 3, 0, 4, 0, 1]
Output: [6, 8, 2, 3, 4, 1, 0, 0, 0]

*/

#include <iostream>
using namespace std;

void zorder(int arr[],int n){
    int k=0;
    for (int i=0;i<n;i++){
        if (arr[i]!=0)
        {
            arr[k]=arr[i];
            k++;
        }}
        for (int i=k;i<n;i++)
        {
            arr[i]= 0;
        }
    
}

int main() {
    
    int arr[]={6, 0, 8, 2, 3, 0, 4, 0, 1};
    int n= sizeof(arr)/sizeof(arr[0]);
zorder(arr,n);
  for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    return 0;
}
